{"version":3,"sources":["webpack:///./src/app/components/admin/employees/employee-details/employee-details.component.html","webpack:///./src/app/components/admin/employees/employee-details/employee-details.component.scss","webpack:///./src/app/components/admin/employees/employee-details/employee-details.component.ts","webpack:///./src/app/components/admin/employees/employee/employee.component.html","webpack:///./src/app/components/admin/employees/employee/employee.component.scss","webpack:///./src/app/components/admin/employees/employee/employee.component.ts","webpack:///./src/app/components/admin/employees/employees-routing.module.ts","webpack:///./src/app/components/admin/employees/employees.module.ts","webpack:///./src/app/components/admin/employees/employees.service.ts","webpack:///./src/app/components/admin/employees/view-employees/view-employees-datasource.ts","webpack:///./src/app/components/admin/employees/view-employees/view-employees.component.html","webpack:///./src/app/components/admin/employees/view-employees/view-employees.component.scss","webpack:///./src/app/components/admin/employees/view-employees/view-employees.component.ts"],"names":[],"mappings":"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","file":"components-admin-employees-employees-module.js","sourcesContent":["module.exports = \"<mat-card *ngIf=\\\"employee\\\">\\n\\n    <mat-card-actions>\\n        <button mat-stroked-button [routerLink]=\\\"['/admin-view-employees']\\\" routerDirection=\\\"backward\\\">Back</button>\\n        <button mat-raised-button position=\\\"end\\\" class=\\\"delete-employee\\\" color=\\\"warn\\\" (click)=\\\"deleteEmployee()\\\"> DELETE EMPLOYEE </button>\\n      </mat-card-actions>\\n\\n  <mat-card-title > {{ employee.displayName }} / {{employee.empID}}</mat-card-title>\\n  <mat-card-subtitle style=\\\"color: blue\\\" *ngIf=\\\"employee.roles.admin\\\"> ADMIN </mat-card-subtitle>\\n  <mat-card-subtitle style=\\\"color: green\\\" *ngIf=\\\"employee.roles.employee\\\"> EMPLOYEE </mat-card-subtitle>\\n\\n  <mat-card-content>\\n\\n    <form [formGroup]=\\\"form\\\"(ngSubmit)=\\\"onSubmit()\\\" class=\\\"employee-form\\\">\\n\\n\\n      <mat-form-field>\\n        <textarea matInput placeholder=\\\"Employee Name\\\" formControlName=\\\"employeeName\\\"> {{employee.displayName}} </textarea>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <textarea matInput placeholder=\\\"Employee ID\\\" formControlName=\\\"employeeID\\\" maxLength=\\\"5\\\"> {{employee.empID}}</textarea>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"hourlyRate\\\">\\n          <input matInput type=\\\"number\\\" maxLength=\\\"3\\\" placeholder=\\\"Hourly Rate\\\" formControlName=\\\"hourlyRate\\\">\\n          <span matPrefix> $&nbsp; </span>\\n  <!-- {{employee.hourlyRate}} -->\\n      </mat-form-field>\\n\\n      <div class=\\\"selectRole\\\">\\n        <mat-form-field>\\n          <mat-select matInput placeholder=\\\"Admin\\\" formControlName=\\\"adminRole\\\" >\\n            <mat-option value=true> True </mat-option>\\n            <mat-option value=false> False </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field >\\n          <mat-select matInput placeholder=\\\"Employee\\\" formControlName=\\\"employeeRole\\\" disabled >\\n              <mat-option value=true> True </mat-option>\\n              <mat-option value=false> False </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n      <mat-card-actions>\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\"  [disabled]=\\\"!form.valid\\\"> UPDATE EMPLOYEE </button>\\n      </mat-card-actions>\\n    </form>\\n\\n    <mat-card-actions>\\n      <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"['/admin-view-employees']\\\" > CANCEL </button>\\n    </mat-card-actions>\\n\\n\\n  </mat-card-content>\\n</mat-card>\\n\"","module.exports = \".employee-form {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.employee-form > * {\\n  width: 100%; }\\n\\n.hourlyRate {\\n  width: 20% !important; }\\n\\n.selectRole {\\n  display: inline-block; }\\n\\n.selectRole mat-form-field {\\n    margin-right: 1.4%; }\\n\\n.delete-employee {\\n  float: right;\\n  overflow: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYW1pYWJyYWhpbS9Eb2N1bWVudHMvR2l0SHViL1BheXJvbGxQcm9qZWN0L3NyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9lbXBsb3llZXMvZW1wbG95ZWUtZGV0YWlscy9lbXBsb3llZS1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQixFQUFBOztBQUd4QjtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLHFCQUFxQixFQUFBOztBQUd2QjtFQUNFLHFCQUFxQixFQUFBOztBQUR2QjtJQUdJLGtCQUFrQixFQUFBOztBQUl0QjtFQUNFLFlBQVk7RUFDWixnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vZW1wbG95ZWVzL2VtcGxveWVlLWRldGFpbHMvZW1wbG95ZWUtZGV0YWlscy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lbXBsb3llZS1mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmVtcGxveWVlLWZvcm0gPiAqIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5ob3VybHlSYXRlIHtcbiAgd2lkdGg6IDIwJSAhaW1wb3J0YW50O1xufVxuXG4uc2VsZWN0Um9sZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWF0LWZvcm0tZmllbGQge1xuICAgIG1hcmdpbi1yaWdodDogMS40JTtcbiAgfVxufVxuXG4uZGVsZXRlLWVtcGxveWVlIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuIl19 */\"","import { element } from 'protractor';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AuthService } from './../../../auth/auth.service';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { User, Roles } from './../../../auth/user';\nimport { EmployeesService } from './../employees.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, of, Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.scss']\n})\nexport class EmployeeDetailsComponent implements OnInit, OnDestroy {\nsubscription: Subscription;\nformSubscription: Subscription;\nemployee: User;\nemployee$: Observable<User>;\nid = 0;\n\nlength: number;\n\nform: FormGroup;\n\nemployeeName = new FormControl('', Validators.required);\nemployeeID = new FormControl('', Validators.required);\nhourlyRate = new FormControl('', Validators.required);\nadminRole = new FormControl('', Validators.required);\nemployeeRole = new FormControl('', Validators.required);\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: EmployeesService,\n    private auth: AuthService,\n    fb: FormBuilder,\n    private afs: AngularFirestore\n  ) {\n    this.form = fb.group({\n      employeeName: this.employeeName,\n      employeeID: this.employeeID,\n      hourlyRate: this.hourlyRate,\n      adminRole: this.adminRole,\n      employeeRole: this.employeeRole\n        });\n  }\n\n  ngOnInit() {\n    this.getEmployeeInfo();\n\n    this.employee$ = this.service.getEmployeeById(this.id);\n    this.subscription = this.employee$.subscribe(\n        data => {\n          this.employee = data;\n          this.form.controls.employeeName.setValue(this.employee.displayName);\n          this.form.controls.employeeID.setValue(this.employee.empID);\n          this.form.controls.hourlyRate.setValue(this.employee.hourlyRate);\n          // this.form.controls.adminRole.setValue(this.employee.roles.admin);\n      },\n        err => {console.log('error', err); } ,\n        () => {console.log('what to do after'); }\n      );\n\n\n    this.formSubscription = this.form.get('adminRole').valueChanges.subscribe((value) => {\n        console.log(value);\n        if (value === 'true') {\n          // this.form.get('adminRole').setValue(true);\n          this.form.get('employeeRole').setValue('false');\n          // this.formSubscription.unsubscribe();\n        } else {\n          // this.form.get('adminRole').setValue(false);\n          this.form.get('employeeRole').setValue('true');\n          // this.formSubscription.unsubscribe();\n        }\n      });\n\n}\n\nngOnDestroy() {\n  this.subscription.unsubscribe();\n  this.formSubscription.unsubscribe();\n\n}\n\n\n  getEmployeeInfo() {\n  this.route.params\n    .subscribe( params => {\n      this.id = params.id;\n    });\n  return of(this.id);\n  }\n\n\n  onSubmit() {\n    console.log('submitted');\n    console.log(this.form);\n\n    const userRef = this.afs.doc(`users/${this.employee.uid}`);\n\n\n    const data: User = {\n    empID: this.form.value.employeeID,\n    uid: this.employee.uid,\n    email: this.employee.email,\n    displayName: this.form.value.employeeName,\n    photoURL: this.employee.photoURL,\n    emailVerified: this.employee.emailVerified,\n    hourlyRate: this.form.value.hourlyRate,\n    roles: {\n      employee: this.stringToBoolean(this.form.value.employeeRole),\n      admin: this.stringToBoolean(this.form.value.adminRole)\n    }\n    };\n\n    console.log(data);\n    userRef.set(data, {merge: true} );\n\n    this.router.navigateByUrl('/admin-view-employees');\n  }\n\n\n  stringToBoolean(word: string) {\n    switch (word.toLowerCase().trim()) {\n        case 'true': case 'yes': case '1': return true;\n        case 'false': case 'no': case '0': case null: return false;\n        default: return Boolean(word);\n    }\n}\n\n\ndeleteEmployee() {\n  const userRef = this.afs.doc(`users/${this.employee.uid}`);\n  this.router.navigateByUrl('/admin-view-employees');\n\n  setTimeout(() => {\n    userRef.delete();\n  }, 300);\n\n}\n\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vZW1wbG95ZWVzL2VtcGxveWVlL2VtcGxveWVlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.scss']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { EmployeeComponent } from './employee/employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { AdminGuard } from './../../auth/guards/admin.guard';\nimport { ViewEmployeesComponent } from './view-employees/view-employees.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nconst employeesRouting: Routes = [\n  {\n    /// \"/admin-view-employees\"\n    path: '',\n    component: EmployeeComponent,\n    canActivate: [AdminGuard],\n    children: [\n      // \"/admin-view-employees/:id or /admin-view-employees/add-employees or just /admin-view-employees\"\n      {\n        path: '',\n        canActivateChild: [AdminGuard],\n        children: [\n          { path: '', component: ViewEmployeesComponent },\n          { path: ':id', component: EmployeeDetailsComponent}\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(employeesRouting)],\n  exports: [RouterModule]\n})\nexport class EmployeesRoutingModule { }\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppMaterialModule } from './../../../shared/app-material.module';\nimport { ViewEmployeesComponent } from './view-employees/view-employees.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeesRoutingModule } from './employees-routing.module';\nimport { EmployeeComponent } from './employee/employee.component';\n\n\n@NgModule({\n  declarations: [EmployeeDetailsComponent, ViewEmployeesComponent, EmployeeComponent],\n  imports: [\n    CommonModule,\n    EmployeesRoutingModule,\n    AppMaterialModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [EmployeeDetailsComponent, ViewEmployeesComponent]\n})\nexport class EmployeesModule { }\n","import { User } from './../../auth/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from './../../auth/auth.service';\nimport { Observable } from 'rxjs';\nimport { Injectable, OnInit } from '@angular/core';\nimport { AngularFirestore} from '@angular/fire/firestore';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeesService implements OnInit {\n\n  employee: User;\n\n  constructor(private as: AuthService, private route: ActivatedRoute, private afs: AngularFirestore) { }\n\n  ngOnInit() {\n  }\n\n  getEmployeeById(id: number): Observable<any> {\n    return this.afs.doc(`users/${id}`).valueChanges();\n  }\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface ViewEmployeesItem {\n  id: number;\n  displayName: string;\n  hourlyRate?: number;\n  roles: {\n    employee: boolean;\n    admin: boolean;\n  };\n  // created?: Date;\n}\n\n// TODO: replace this with real data from your application\n\n\n/**\n * Data source for the Viewjobs view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ViewEmployeesDataSource extends DataSource<ViewEmployeesItem> {\n  employeesData: ViewEmployeesItem[] = [];\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<ViewEmployeesItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.employeesData),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginator's length\n    this.paginator.length = this.employeesData.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.employeesData]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: ViewEmployeesItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: ViewEmployeesItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'created': return compare(+a.id, +b.id, isAsc);\n        case 'name': return compare(a.id, b.id, isAsc);\n        case 'hourlyRate': return compare(a.id, b.id, isAsc);\n        case 'role': return compare(a.id, b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"<mat-card class=\\\"mat-elevation-z8\\\">\\n    <mat-card-title>\\n      EMPLOYEES\\n    </mat-card-title>\\n\\n\\n    <table mat-table #table [dataSource]='dataSource' matSort aria-label=\\\"Elements\\\">\\n      <!-- Name Column -->\\n      <ng-container matColumnDef = 'name'>\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.displayName }} </td>\\n      </ng-container>\\n      <!-- Hourly Rate Column -->\\n      <ng-container matColumnDef=\\\"hourlyRate\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Hourly Rate</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> ${{row.hourlyRate}}</td>\\n      </ng-container>\\n\\n      <!-- Role Column -->\\n      <ng-container matColumnDef=\\\"role\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Role</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <button class=\\\"role-button\\\" mat-button [ngStyle]=\\\"{'background-color' :row.roles.admin === true ? '#64b5f6': row.roles.employee === true ? '#4db6ac\\n          ': '#ff8a65'}\\\">\\n            {{row.roles.admin === true ? 'ADMIN ' :  row.roles.employee === true ? 'EMPLOYEE ' : 'NOT APPROVED' }}\\n          </button>\\n        </td>\\n\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/admin-view-employees', row.uid]\\\"></tr>\\n    </table>\\n\\n      <mat-paginator #paginator\\n        [pageIndex]=\\\"0\\\"\\n        [pageSize]=\\\"20\\\"\\n        [pageSizeOptions]=\\\"[10, 20, 30]\\\">\\n    </mat-paginator>\\n\\n\\n\\n  </mat-card>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.add-employees-button {\\n  position: absolute;\\n  margin: 0;\\n  right: 10px; }\\n\\n.role-button {\\n  width: 125px;\\n  color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYW1pYWJyYWhpbS9Eb2N1bWVudHMvR2l0SHViL1BheXJvbGxQcm9qZWN0L3NyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9lbXBsb3llZXMvdmlldy1lbXBsb3llZXMvdmlldy1lbXBsb3llZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXLEVBQUE7O0FBR2I7RUFDRSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULFdBQVcsRUFBQTs7QUFHYjtFQUNFLFlBQVk7RUFDWixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FkbWluL2VtcGxveWVlcy92aWV3LWVtcGxveWVlcy92aWV3LWVtcGxveWVlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmFkZC1lbXBsb3llZXMtYnV0dG9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtYXJnaW46IDA7XG4gIHJpZ2h0OiAxMHB4O1xufVxuXG4ucm9sZS1idXR0b24ge1xuICB3aWR0aDogMTI1cHg7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbiJdfQ== */\"","import { User } from './../../../auth/user';\nimport { AuthService } from './../../../auth/auth.service';\nimport { Subscription } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { ViewEmployeesDataSource, ViewEmployeesItem } from './view-employees-datasource';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\n\n\n\n@Component({\n  selector: 'app-view-employees',\n  templateUrl: './view-employees.component.html',\n  styleUrls: ['./view-employees.component.scss']\n})\nexport class ViewEmployeesComponent implements OnInit, OnDestroy {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: ViewEmployeesDataSource;\n  loggedInUser;\n\n  displayedColumns = ['name', 'hourlyRate', 'role'];\n  subscription: Subscription;\n\n  constructor( private afs: AngularFirestore, private as: AuthService) { }\n\n  ngOnInit() {\n\n    this.loggedInUser = this.as.user$.subscribe( (res) => {\n      this.loggedInUser = res;\n    });\n\n// get all employees\n// display employees\n\n\n\n    this.subscription = this.afs.collection<ViewEmployeesItem>('users').valueChanges().subscribe( res => {\n      this.dataSource = new ViewEmployeesDataSource(this.paginator, this.sort);\n      this.dataSource.employeesData = res;\n    });\n  }\n\nngOnDestroy() {\n  this.subscription.unsubscribe();\n}\n\n\n}\n"],"sourceRoot":""}